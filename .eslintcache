[{"E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\App.js":"1","E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\index.js":"2","E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\StateProvider.js":"3","E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\reducer.js":"4","E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\components\\Login.js":"5","E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\components\\Chat.js":"6","E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\reportWebVitals.js":"7","E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\components\\SidebarChat.js":"8","E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\components\\Sidebar.js":"9","E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\firebase.js":"10"},{"size":1022,"mtime":1607094046433,"results":"11","hashOfConfig":"12"},{"size":688,"mtime":1606937730551,"results":"13","hashOfConfig":"12"},{"size":377,"mtime":1606931469137,"results":"14","hashOfConfig":"12"},{"size":392,"mtime":1607190906306,"results":"15","hashOfConfig":"12"},{"size":1179,"mtime":1607180900949,"results":"16","hashOfConfig":"12"},{"size":7478,"mtime":1607191189234,"results":"17","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"12"},{"size":1463,"mtime":1607191216080,"results":"19","hashOfConfig":"12"},{"size":2777,"mtime":1607189230024,"results":"20","hashOfConfig":"12"},{"size":730,"mtime":1606920360625,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1r7h8e0",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\App.js",["48","49","50"],"import { useEffect, useState } from 'react';\nimport './App.css';\nimport Chat from './components/Chat';\nimport Sidebar from './components/Sidebar';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\nimport Login from './components/Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue()\n\n  return (\n\n    <div className=\"app\">\n\n      <Router>\n        <Route path='/'>\n          {!user ?\n            <Redirect to='/login' /> : <Redirect to='/dashboard' />\n          }\n        </Route>\n        <Route path='/login'>\n          <Login />\n        </Route>\n        <Route path='/dashboard' exact>\n          <div className='appBody'>\n            <Sidebar />\n            <Chat noChat />\n          </div>\n        </Route>\n        <Route path='/dashboard/rooms/:roomId'>\n          <div className='appBody'>\n            <Sidebar />\n            <Chat />\n          </div>\n        </Route>\n      </Router>\n    </div>\n\n  );\n}\n\nexport default App;\n",["51","52"],"E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\index.js",[],["53","54"],"E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\StateProvider.js",[],"E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\reducer.js",[],["55","56"],"E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\components\\Login.js",["57"],"E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\components\\Chat.js",["58"],"import { Avatar, IconButton, Switch } from '@material-ui/core'\r\nimport { AttachFile, InsertEmoticon, Mic, MoreVert, SearchOutlined, Send } from '@material-ui/icons'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport '../css/Chat.css'\r\nimport db from '../firebase'\r\nimport { useStateValue } from '../StateProvider'\r\nimport firebase from 'firebase'\r\nimport Picker from 'emoji-picker-react'\r\n\r\nexport default function Chat({ noChat }) {\r\n\r\n    const [msgInput, setMsgInput] = useState('')\r\n    const [roomName, setRoomName] = useState('')\r\n    const { roomId } = useParams()\r\n    const [messages, setMessages] = useState([])\r\n    const [{ user }, dispatch] = useStateValue()\r\n    const [emojiChoose, setEmojiChoose] = useState(false)\r\n    const [switchState, SetSwitchState] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        if (roomId) {\r\n            const unsubscribe = db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n                setRoomName(snapshot.data().name)\r\n            })\r\n            db.collection('rooms')\r\n                .doc(roomId)\r\n                .collection('messages')\r\n                .orderBy('timestamp', 'asc')\r\n                .onSnapshot(snapshot => {\r\n                    setMessages(snapshot.docs.map(doc => (\r\n                        {\r\n                            id: doc.id,\r\n                            data: doc.data()\r\n                        }\r\n                    )))\r\n                })\r\n            return () => {\r\n                unsubscribe()\r\n            }\r\n        }\r\n\r\n    }, [roomId])\r\n\r\n    useEffect(() => {\r\n        let elem = document.querySelector('.chat__body')\r\n        if (elem) elem.scrollTop = elem.scrollHeight\r\n\r\n    }, [messages])\r\n\r\n    const handleMessageSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const unsubscribe = db.collection('rooms')\r\n            .doc(roomId)\r\n            .collection('messages')\r\n            .add({\r\n                message: msgInput,\r\n                name: user.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n        setMsgInput('')\r\n\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n\r\n    }\r\n\r\n    const onEmojiClick = (e, obj) => {\r\n        setMsgInput(prevMsg => prevMsg + obj.emoji)\r\n    }\r\n\r\n    const handleSwitchChange = () => {\r\n        SetSwitchState(prev => !prev)\r\n        if (!switchState) {\r\n            document.querySelector('.app').style.backgroundColor = '#757474'\r\n            document.querySelector('.appBody').style.backgroundColor = '#3a3939'\r\n            document.querySelector('.sidebar__search').style.backgroundColor = 'rgb(95 95 95 / 90%)'\r\n            document.querySelector('.sidebar__searchContainer').style.backgroundColor = '#a6a2a2'\r\n            document.querySelector('.sidebar__searchContainer > input').style.backgroundColor = '#a3a3a3'\r\n            document.querySelector('.sidebar__searchContainer > input').style.color = 'white'\r\n            document.querySelector('.sidebar__chats').style.backgroundColor = '#3a3939'\r\n            document.querySelectorAll('.sidebarChat').forEach(e => {\r\n                e.style.color = 'white'\r\n            })\r\n            document.querySelector('.chat__headerInfo').style.color = 'white'\r\n            document.querySelectorAll('.MuiSvgIcon-root').forEach(e => {\r\n                e.style.color = 'white'\r\n            })\r\n        }\r\n        else {\r\n            document.querySelector('.app').style.backgroundColor = '#757474'\r\n            document.querySelector('.appBody').style.backgroundColor = 'rgb(247, 245, 245)'\r\n            document.querySelector('.sidebar__search').style.backgroundColor = 'rgba(253, 252, 252, 0.897)'\r\n            document.querySelector('.sidebar__searchContainer').style.backgroundColor = 'white'\r\n            document.querySelector('.sidebar__searchContainer > input').style.backgroundColor = 'white'\r\n            document.querySelector('.sidebar__searchContainer > input').style.color = 'black'\r\n            document.querySelector('.sidebar__chats').style.backgroundColor = 'white'\r\n            document.querySelectorAll('.sidebarChat').forEach(e => {\r\n                e.style.color = 'white'\r\n            })\r\n            document.querySelector('.chat__headerInfo').style.color = 'black'\r\n            document.querySelectorAll('.MuiSvgIcon-root').forEach(e => {\r\n                e.style.color = 'rgba(0, 0, 0, 0.54)'\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='chat'>\r\n            {noChat ? <h2 style={{ textAlign: 'center', margin: 'auto 16%' }}>Click on the any room on sidebar section to see all the chats.</h2> :\r\n                <>\r\n                    <div className=\"chat__header\">\r\n                        <Avatar />\r\n                        <div className=\"chat__headerInfo\">\r\n                            <h3>{roomName}</h3>\r\n                            <p>last seen at {new Date(messages[messages.length - 1]?.data.timestamp?.toDate()).toUTCString()}</p>\r\n                        </div>\r\n                        <div className=\"chat__headerRight\">\r\n                            <Switch checked={switchState} onChange={handleSwitchChange} color='primary' />\r\n                            <IconButton>\r\n                                <SearchOutlined />\r\n                            </IconButton>\r\n                            <IconButton>\r\n                                <MoreVert />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"chat__body\">\r\n\r\n                        {messages.map(msg => (\r\n\r\n                            <p className={`chat__message ${msg.data.name === user.displayName && 'chat__receiver'}`} key={msg.id}>\r\n                                <span className=\"chat__name\">{msg.data.name}</span>\r\n                                {msg.data.message}\r\n                                <span className=\"chat__timestamp\">\r\n                                    {new Date(msg.data.timestamp?.toDate()).toUTCString()}\r\n                                </span>\r\n                            </p>\r\n                        ))}\r\n\r\n                    </div>\r\n                    <div className=\"chat__footer\">\r\n                        {\r\n                            emojiChoose && <Picker onEmojiClick={onEmojiClick} />\r\n                        }\r\n                        <IconButton onClick={() => setEmojiChoose(prev => !prev)}>\r\n                            <InsertEmoticon />\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <AttachFile />\r\n                        </IconButton>\r\n                        <form onSubmit={handleMessageSubmit}>\r\n                            <input type=\"text\" id=\"\" placeholder='Type a message' onChange={e => setMsgInput(e.target.value)} value={msgInput} />\r\n                            {msgInput &&\r\n                                <IconButton type='submit'>\r\n                                    <Send />\r\n                                </IconButton>\r\n                            }\r\n                            {!msgInput &&\r\n                                <IconButton>\r\n                                    <Mic />\r\n                                </IconButton>\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                </>}\r\n        </div>\r\n    )\r\n}\r\n","E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\reportWebVitals.js",[],["59","60"],"E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\components\\SidebarChat.js",["61"],"E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\components\\Sidebar.js",["62"],"E:\\Documents\\Web dev\\projects\\whatsapp-clone-mern\\Client\\src\\firebase.js",[],{"ruleId":"63","severity":1,"message":"64","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":19},{"ruleId":"63","severity":1,"message":"67","line":1,"column":21,"nodeType":"65","messageId":"66","endLine":1,"endColumn":29},{"ruleId":"63","severity":1,"message":"68","line":11,"column":20,"nodeType":"65","messageId":"66","endLine":11,"endColumn":28},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"69","replacedBy":"75"},{"ruleId":"71","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":11,"column":12,"nodeType":"79","messageId":"80","endLine":11,"endColumn":15},{"ruleId":"63","severity":1,"message":"68","line":17,"column":22,"nodeType":"65","messageId":"66","endLine":17,"endColumn":30},{"ruleId":"69","replacedBy":"81"},{"ruleId":"71","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":17,"column":8,"nodeType":"85","endLine":17,"endColumn":10,"suggestions":"86"},{"ruleId":"63","severity":1,"message":"68","line":16,"column":22,"nodeType":"65","messageId":"66","endLine":16,"endColumn":30},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'dispatch' is assigned a value but never used.","no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],["87"],["88"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["87"],["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [id]",{"range":"92","text":"93"},[577,579],"[id]"]